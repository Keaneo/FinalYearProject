% SETUP AND VARIABLES
%================================================
rootDir = './allData'; % Directory to find Steinmetz data
nProbe = 1; % Probe Number (0-indexed)
region_names = ["MOs", "ACA"]; % Add more region names if desired
% Time range
start_time = 65;
end_time = 75;
bin_size = 0.05;

[s, sessionName] = load_session(rootDir);
anatData = prepare_anat_data(s, nProbe);
brain_region_spike_times = sort_spikes(s, anatData, sessionName);

valid_region_names = cell(1, numel(region_names));

for i = 1:numel(region_names)
    valid_region_names{i} = regexprep(region_names{i}, '[^a-zA-Z0-9]', '');
    if ~isfield(brain_region_spike_times, valid_region_names{i})
        error('One of the specified region_names was not found in the brain_region_spike_times struct.');
    end
end

total_regions = numel(region_names);

% PLOTTING SPIKES
%================================================
question = 'Plot Spikes?';
title = 'Yes or No';

userResponse = yes_no_button(question, title);

switch userResponse
    case 'Yes'
        disp('User selected "Yes".');
        figure;
        ax = gobjects(total_regions, 1);
        
        for i = 1:total_regions
            region = brain_region_spike_times.(valid_region_names{i});
            
            % Create a subplot for each region
            ax(i) = subplot(total_regions, 1, i);
            plot_spikes(region, s, start_time, end_time);
            box off;
        
            if i < total_regions
                set(ax(i), 'XTickLabel', {});
            end
        
            ylabel(region_names(i));
        end
        
        xlabel('Time (s)');
        
        % Adjust spacing between subplots to zero
        for i = 1:(total_regions-1)
            pos1 = get(ax(i), 'Position');
            pos2 = get(ax(i+1), 'Position');
            pos1(2) = pos2(2) + pos2(4);
            set(ax(i), 'Position', pos1);
        end
        
    case 'No'
        disp('User selected "No".');
        % Do nothing;
    otherwise
        disp('User closed the dialog without selecting an option.');
        % Do nothing;
end


% FIRING RATES
%================================================

question = 'Get Firing Rates?';
title = 'Yes or No';

userResponse = yes_no_button(question, title);


% Process the user's response
switch userResponse
    case 'Yes'
        disp('User selected "Yes".');
        firing_rates = avg_across_regions(brain_region_spike_times, region_names, start_time, end_time, bin_size);
    case 'No'
        disp('User selected "No".');
        % Do nothing;
    otherwise
        disp('User closed the dialog without selecting an option.');
        % Do nothing;
end
